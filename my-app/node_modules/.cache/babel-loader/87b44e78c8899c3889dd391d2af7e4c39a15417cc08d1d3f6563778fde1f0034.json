{"ast":null,"code":"var _jsxFileName = \"/Users/nmufti/Desktop/reactt/my-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport CardList from \"./CardList\";\n// We export variables like this:\nimport { robots } from \"./robots\";\nimport SearchBox from \"./SearchBox\";\n\n//return can only return ONE thing so nest everything inside one main\n// div tag!\n\n//how can sibling (pure) components communicate?\n// we use states!\n// a STATE (is an object that describe an application) (changes)\n// a PROPS (things that come out of state)\n// STATE (parent) >> props (child)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst state = {\n  robots: robots,\n  searchfield: \"\"\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"RoboFriends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        robots: robots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","CardList","robots","SearchBox","jsxDEV","_jsxDEV","state","searchfield","App","constructor","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/nmufti/Desktop/reactt/my-app/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport CardList from \"./CardList\";\n// We export variables like this:\nimport { robots } from \"./robots\";\nimport SearchBox from \"./SearchBox\";\n\n//return can only return ONE thing so nest everything inside one main\n// div tag!\n\n//how can sibling (pure) components communicate?\n// we use states!\n// a STATE (is an object that describe an application) (changes)\n// a PROPS (things that come out of state)\n// STATE (parent) >> props (child)\n\nconst state = {\n\trobots: robots,\n\tsearchfield: \"\",\n};\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {};\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"tc\">\n\t\t\t\t<h1>RoboFriends</h1>\n\t\t\t\t<SearchBox />\n\t\t\t\t<CardList robots={robots} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,YAAY;AACjC;AACA,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAOC,SAAS,MAAM,aAAa;;AAEnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,KAAK,GAAG;EACbJ,MAAM,EAAEA,MAAM;EACdK,WAAW,EAAE;AACd,CAAC;AAED,MAAMC,GAAG,SAASR,SAAS,CAAC;EAC3BS,WAAWA,CAAA,EAAG;IACb,KAAK,CAAC,CAAC;IACP,IAAI,CAACH,KAAK,GAAG,CAAC,CAAC;EAChB;EACAI,MAAMA,CAAA,EAAG;IACR,oBACCL,OAAA;MAAKM,SAAS,EAAC,IAAI;MAAAC,QAAA,gBAClBP,OAAA;QAAAO,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBX,OAAA,CAACF,SAAS;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACbX,OAAA,CAACJ,QAAQ;QAACC,MAAM,EAAEA;MAAO;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAER;AACD;AAEA,eAAeR,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}