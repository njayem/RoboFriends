{"ast":null,"code":"var _jsxFileName = \"/Users/nmufti/Desktop/reactt/my-app/src/App.js\";\nimport React from \"react\";\nimport CardList from \"./CardList\";\n// We export variables like this:\nimport { robots } from \"./robots\";\nimport SearchBox from \"./SearchBox\";\n\n//return can only return ONE thing so nest everything inside one main\n// div tag!\n\n//how can sibling (pure) components communicate?\n// we use states!\n// a STATE (is an object that describe an application) (changes)\n// a PROPS (things that come out of state)\n// STATE (parent) >> props (child)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst state = {\n  robots: robots,\n  searchfield: \"\"\n};\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tc\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"RoboFriends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      robots: robots\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","CardList","robots","SearchBox","jsxDEV","_jsxDEV","state","searchfield","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nmufti/Desktop/reactt/my-app/src/App.js"],"sourcesContent":["import React from \"react\";\nimport CardList from \"./CardList\";\n// We export variables like this:\nimport { robots } from \"./robots\";\nimport SearchBox from \"./SearchBox\";\n\n//return can only return ONE thing so nest everything inside one main\n// div tag!\n\n//how can sibling (pure) components communicate?\n// we use states!\n// a STATE (is an object that describe an application) (changes)\n// a PROPS (things that come out of state)\n// STATE (parent) >> props (child)\n\nconst state = {\n\trobots: robots,\n\tsearchfield: \"\",\n};\nconst App = () => {\n\treturn (\n\t\t<div className=\"tc\">\n\t\t\t<h1>RoboFriends</h1>\n\t\t\t<SearchBox />\n\t\t\t<CardList robots={robots} />\n\t\t</div>\n\t);\n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC;AACA,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAOC,SAAS,MAAM,aAAa;;AAEnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,KAAK,GAAG;EACbJ,MAAM,EAAEA,MAAM;EACdK,WAAW,EAAE;AACd,CAAC;AACD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EACjB,oBACCH,OAAA;IAAKI,SAAS,EAAC,IAAI;IAAAC,QAAA,gBAClBL,OAAA;MAAAK,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBT,OAAA,CAACF,SAAS;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACbT,OAAA,CAACJ,QAAQ;MAACC,MAAM,EAAEA;IAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAER,CAAC;AAACC,EAAA,GARIP,GAAG;AAUT,eAAeA,GAAG;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}